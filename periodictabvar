#include <stdio.h>
#include <conio.h>
int main(void)
{int z=0, a=1, b=1, c=5, d=0;
unsigned	char e[120][2];
//printf("ANSI character set:");
//for (z=32; z<=255; z++) {if (z%8==0) {printf("\n\n");} printf("%d = %c\t\t", z, z);}
printf("\n\n");
e[1][1]=72; e[1][2]=32;			// Hydrogen
e[2][1]=72; e[2][2]=101;		// Helium
e[3][1]=76; e[3][2]=105;		// Lithium
e[4][1]=66; e[4][2]=101;		// Beryllium
e[5][1]=66; e[5][2]=32;			// Boron
e[6][1]=67; e[6][2]=32;			// Carbon
e[7][1]=78; e[7][2]=32;			// Nitrogen
e[8][1]=79; e[8][2]=32;			// Oxygen
e[9][1]=70; e[9][2]=32;			// Fluorine
e[10][1]=78; e[10][2]=101;		// Neon
e[11][1]=78; e[11][2]=97;		// Sodium
e[12][1]=77; e[12][2]=103;		// Magnesium
e[13][1]=65; e[13][2]=108;		// Aluminium
e[14][1]=83; e[14][2]=105;		// Silicon
e[15][1]=80; e[15][2]=32;		// Phosphorous
e[16][1]=83; e[16][2]=32;		// Sulfur
e[17][1]=67; e[17][2]=108;		// Chlorine
e[18][1]=65; e[18][2]=114;		// Argon
e[19][1]=75; e[19][2]=32;		// Potassium
e[20][1]=67; e[20][2]=97;		// Calcium
e[21][1]=83; e[21][2]=99;		// Scandium
e[22][1]=84; e[22][2]=105;		// Titanium
e[23][1]=86; e[23][2]=32;		// Vanadium
e[24][1]=67; e[24][2]=114;		// Chromium
e[25][1]=77; e[25][2]=110;		// Magnesium
e[26][1]=70; e[26][2]=101;		// Iron
e[27][1]=67; e[27][2]=111;		// Cobalt
e[28][1]=78; e[28][2]=105;		// Nickel
e[29][1]=67; e[29][2]=117;		// Copper
e[30][1]=90; e[30][2]=110;		// Zinc
e[31][1]=71; e[31][2]=97;		// Galium
e[32][1]=71; e[32][2]=101;		// Germanium
e[33][1]=65; e[33][2]=115;		// Arsenic
e[34][1]=83; e[34][2]=101;		// Selenium
e[35][1]=66; e[35][2]=114;		// Bromine
e[36][1]=75; e[36][2]=114;		// Krypton
e[37][1]=82; e[37][2]=98;		// Rubidium
e[38][1]=83; e[38][2]=114;		// Strontium
e[39][1]=89; e[39][2]=32;		// Yttrium
e[40][1]=90; e[40][2]=114;		// Zirconium
e[41][1]=78; e[41][2]=98;		// Niobium
e[42][1]=77; e[42][2]=111;		// Molybdenum
e[43][1]=84; e[43][2]=99;		// Technecium
e[44][1]=82; e[44][2]=117;		// Ruthenium
e[45][1]=82; e[45][2]=104;		// Rhodium
e[46][1]=75; e[46][2]=114;		// Palladium
e[47][1]=65; e[47][2]=103;		// Silver
e[48][1]=67; e[48][2]=100;		// Cadmium
e[49][1]=73; e[49][2]=110;		// Indium
e[50][1]=83; e[50][2]=110;		// Tin
e[51][1]=83; e[51][2]=98;		// Antimony
e[52][1]=84; e[52][2]=101;		// Tellurium
e[53][1]=73; e[53][2]=32;		// Iodine
e[54][1]=88; e[54][2]=101;		// Xenon
e[55][1]=67; e[55][2]=115;		// Caesium
e[56][1]=66; e[56][2]=97;		// Barium
e[57][1]=76; e[57][2]=97;		// Lanthanum
e[58][1]=67; e[58][2]=101;		// Cerium
e[59][1]=80; e[59][2]=114;		// Praseodymium
e[60][1]=78; e[60][2]=100;		// Neodymium
e[61][1]=80; e[61][2]=109;		// Promethium
e[62][1]=83; e[62][2]=109;		// Samarium
e[63][1]=69; e[63][2]=117;		// Europium
e[64][1]=71; e[64][2]=100;		// Gadolinium
e[65][1]=84; e[65][2]=98;		// Terbium
e[66][1]=68; e[66][2]=121;		// Dysprosium
e[67][1]=72; e[67][2]=109;		// Holmium
e[68][1]=69; e[68][2]=114;		// Erbium
e[69][1]=84; e[69][2]=109;		// Thulium
e[70][1]=89; e[70][2]=98;		// Ytterbium
e[71][1]=76; e[71][2]=117;		// Lutetium
e[72][1]=72; e[72][2]=102;		// Hafnium
e[73][1]=84; e[73][2]=97;		// Tantalum
e[74][1]=87; e[74][2]=32;		// Tungsten
e[75][1]=82; e[75][2]=104;		// Rhenium
e[76][1]=79; e[76][2]=115;		// Osmium
e[77][1]=73; e[77][2]=114;		// Iridium
e[78][1]=80; e[78][2]=116;		// Platinum
e[79][1]=65; e[79][2]=117;		// Gold
e[80][1]=72; e[80][2]=103;		// Mercury
e[81][1]=84; e[81][2]=108;		// Thallium
e[82][1]=80; e[82][2]=98;		// Lead
e[83][1]=66; e[83][2]=105;		// Bismuth
e[84][1]=80; e[84][2]=111;		// Polonium
e[85][1]=65; e[85][2]=115;		// Astatine
e[86][1]=82; e[86][2]=114;		// Radon
e[87][1]=70; e[87][2]=110;		// Francium
e[88][1]=82; e[88][2]=97;		// Radium
e[89][1]=65; e[89][2]=99;		// Actinium
e[90][1]=84; e[90][2]=104;		// Thorium
e[91][1]=80; e[91][2]=97;		// Protactinium
e[92][1]=85; e[92][2]=32;		// Uranium
e[93][1]=78; e[93][2]=112;		// Neptunium
e[94][1]=80; e[94][2]=117;		// Plutonium
e[95][1]=65; e[95][2]=109;		// Americium
e[96][1]=67; e[96][2]=109;		// Curium
e[97][1]=66; e[97][2]=107;		// Berkylium
e[98][1]=67; e[98][2]=102;		// Californium
e[99][1]=69; e[99][2]=115;		// Einsteinium
e[100][1]=70; e[100][2]=109;	// Fermium
e[101][1]=77; e[101][2]=100;	// Mendelevium
e[102][1]=78; e[102][2]=111;	// Nobelium
e[103][1]=76; e[103][2]=114;	// Lawrencium
e[104][1]=82; e[104][2]=102;	// Rutherfordium
e[105][1]=68; e[105][2]=98;		// Dubnium
e[106][1]=83; e[106][2]=103;	// Seaborgium
e[107][1]=66; e[107][2]=104;	// Bohrium
e[108][1]=72; e[108][2]=115;	// Hassium
e[109][1]=77; e[109][2]=116;	// Meitnerium
e[110][1]=68; e[110][2]=115;	// Darmstadium
e[111][1]=82; e[111][2]=103;	// Roentgenium
e[112][1]=67; e[112][2]=110;	// Copernicum
e[113][1]=78; e[113][2]=104;	// Nihonium
e[114][1]=70; e[114][2]=108;	// Fleovium
e[115][1]=77; e[115][2]=99;		// Moscovium
e[116][1]=76; e[116][2]=118;	// Livermorium
e[117][1]=84; e[117][2]=115;	// Tennissine
e[118][1]=79; e[118][2]=103;	// Oganesson


printf("Left step or Janet layout:\n");
for (a=1, b=1; a<=118; a++, b=b+4) {
if (a==1) {_textcolor(4);}
if (a==5 || a==13 || a==31 || a==49 || a==81 || a==113) {_textcolor(7);}
if (a==6 || a==14 || a==32 || a==50 || a==82 || a==114) {_textcolor(8);}
if (a==7 || a==15 || a==33 || a==51 || a==83 || a==115) {_textcolor(10);}
if (a==8 || a==16 || a==34 || a==52 || a==84 || a==116) {_textcolor(1);}
if (a==9 || a==17 || a==35 || a==53 || a==85 || a==117) {_textcolor(2);}
if (a==2 || a==10 || a==18 || a==36 || a==54 || a==86 || a==118) {_textcolor(5);}
if (a==3 || a==11 || a==19 || a==37 || a==55 || a==87) {_textcolor(12);}
if (a==4 || a==12 || a==20 || a==38 || a==56 || a==88) {_textcolor(6);}
if ((a>=21 && a<=30) || (a>=39 && a<=48) ||(a>=72 && a<=80) ||(a>=104 && a<=112)) {_textcolor(14);}
if (a>=57 && a<=71) {_textcolor(9);}
if (a>=89 && a<=103) {_textcolor(4);}
_gotoxy(b,c);printf("%c%c%c%c", 201,205,205,187); 
_gotoxy(b,c+1);printf("%c%c%c%c", 186,e[a][1],e[a][2],186);
_gotoxy(b,c+2);printf("%c%c%c%c", 200,205,205,188);
if (a==1) {b=b+120;}
if (a==2 || a==10 || a==18 || a==36 || a==54 || a==86) {c=c+3; b=-3;}
if (a==4 || a==12) {b=b+96;}
if (a==20 || a==38) {b=b+56;}
_textcolor(15);}


printf("\n\nSeaborg or conventional layout:\n"); c=c+6;
for (a=1, b=1; a<=118; a++, b=b+4) {
if (a==1) {_textcolor(12);}
if (a==5 || a==13 || a==31 || a==49 || a==81 || a==113) {_textcolor(7);}
if (a==6 || a==14 || a==32 || a==50 || a==82 || a==114) {_textcolor(8);}
if (a==7 || a==15 || a==33 || a==51 || a==83 || a==115) {_textcolor(10);}
if (a==8 || a==16 || a==34 || a==52 || a==84 || a==116) {_textcolor(1);}
if (a==9 || a==17 || a==35 || a==53 || a==85 || a==117) {_textcolor(2);}
if (a==2 || a==10 || a==18 || a==36 || a==54 || a==86 || a==118) {_textcolor(5);}
if (a==3 || a==11 || a==19 || a==37 || a==55 || a==87) {_textcolor(12);}
if (a==4 || a==12 || a==20 || a==38 || a==56 || a==88) {_textcolor(6);}
if ((a>=21 && a<=30) || (a>=39 && a<=48) || (a>=72 && a<=80) ||(a>=104 && a<=112)) {_textcolor(14);}
if (a==57) {_textcolor(9);}
if (a==89) {_textcolor(4);}
if ((a>=1 && a<=57) || (a>71 && a<=89) || (a>103 && a<=118)) {
_gotoxy(b,c);printf("%c%c%c%c", 201,205,205,187); 
_gotoxy(b,c+1);printf("%c%c%c%c", 186,e[a][1],e[a][2],186);
_gotoxy(b,c+2);printf("%c%c%c%c", 200,205,205,188);
if (a==57) {
_gotoxy(b,c);printf("%c%c%c%c", 201,205,205,187); 
_gotoxy(b,c+1);printf("%c%c%c%c", 186,e[57][1],e[57][2],186);
_gotoxy(b,c+2);printf("%c%c%c%c", 200,205,205,188);}

if (a==1) {b=b+64;}
if (a==2 || a==10 || a==18 || a==36 || a==54 || a==86) {c=c+3; b=-3;}
if (a==4 || a==12) {b=b+40;}
if (a==20 || a==38 || a==56 || a==88) {b=b;}
if (a==56 || a==88) {b=b-56;} }}

c=50;
for (a=57, b=13; a<=71; a++, b=b+4) {_textcolor(9);
_gotoxy(b,c);printf("%c%c%c%c\n", 201,205,205,187); 
_gotoxy(b,c+1);printf("%c%c%c%c\n", 186,e[a][1],e[a][2],186);
_gotoxy(b,c+2);printf("%c%c%c%c\n", 200,205,205,188);}
c=53;
for (a=89, b=13; a<=103; a++, b=b+4) {_textcolor(4);
_gotoxy(b,c);printf("%c%c%c%c\n", 201,205,205,187); 
_gotoxy(b,c+1);printf("%c%c%c%c\n", 186,e[a][1],e[a][2],186);
_gotoxy(b,c+2);printf("%c%c%c%c\n", 200,205,205,188);}
printf("\n");
_textcolor(15);




//// Helium
//_gotoxy(54,1);printf("%c%c%c%c\n", 201,205,205,187);
//_gotoxy(54,2);printf("%c%c%c%c\n", 186,e[2][1],e[2][2],186);
//_gotoxy(54,3);printf("%c%c%c%c\n", 200,205,205,188);

//// Lithium Beryllium
//_gotoxy(1,4);printf("%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,187);
//_gotoxy(1,5);printf("%c%c%c%c%c%c%c\n", 186,e[3][1],e[3][2],186,e[4][1],e[4][2],186);
//_gotoxy(1,6);printf("%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,188);


//// Boron to Neon
//_gotoxy(39,4);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,187);
//_gotoxy(39,5);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 186,e[5][1],e[5][2],186,e[6][1],e[6][2],186,e[7][1],e[7][2],186,e[8][1],e[8][2],186,e[9][1],e[9][2],186,e[10][1],e[10][2],186);
//_gotoxy(39,6);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,188);

//// Sodium Magnesium
//printf("%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,187);
//printf("%c%c%c%c%c%c%c\n", 186,e[11][1],e[11][2],186,e[12][1],e[12][2],186);
//printf("%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,188);

//// Aluminium to Argon
//_gotoxy(39,7);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,187);
//_gotoxy(39,8);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 186,e[13][1],e[13][2],186,e[14][1],e[14][2],186,e[15][1],e[15][2],186,e[16][1],e[16][2],186,e[17][1],e[17][2],186,e[18][1],e[18][2],186);
//_gotoxy(39,9);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,188);

//// Potassium Calcium
//printf("%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,187);
//printf("%c%c%c%c%c%c%c\n", 186,e[19][1],e[19][2],186,e[20][1],e[20][2],186);
//printf("%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,188);

//// Scandium to Zinc
//_gotoxy(8,10);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,187);
//_gotoxy(8,11);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 186,e[21][1],e[21][2],186,e[22][1],e[22][2],186,e[23][1],e[23][2],186,e[24][1],e[24][2],186,e[25][1],e[25][2],186,e[26][1],e[26][2],186,e[27][1],e[27][2],186,e[28][1],e[28][2],186,e[29][1],e[29][2],186,e[30][1],e[30][2],186);
//_gotoxy(8,12);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,188);

//// Galium to Krypton
//_gotoxy(39,10);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,187);
//_gotoxy(39,11);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 186,e[31][1],e[31][2],186,e[32][1],e[32][2],186,e[33][1],e[33][2],186,e[34][1],e[34][2],186,e[35][1],e[35][2],186,e[36][1],e[36][2],186);
//_gotoxy(39,12);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,188);

//// Rubidium Strontium
//printf("%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,187);
//printf("%c%c%c%c%c%c%c\n", 186,e[37][1],e[37][2],186,e[38][1],e[38][2],186);
//printf("%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,188);

//// Yttrium to Cadmium
//_gotoxy(8,13);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,187);
//_gotoxy(8,14);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 186,e[39][1],e[39][2],186,e[40][1],e[40][2],186,e[41][1],e[41][2],186,e[42][1],e[42][2],186,e[43][1],e[43][2],186,e[44][1],e[44][2],186,e[45][1],e[45][2],186,e[46][1],e[46][2],186,e[47][1],e[47][2],186,e[48][1],e[48][2],186);
//_gotoxy(8,15);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,188);

//// Indium to Xenon
//_gotoxy(39,13);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,187);
//_gotoxy(39,14);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 186,e[49][1],e[49][2],186,e[50][1],e[50][2],186,e[51][1],e[51][2],186,e[52][1],e[52][2],186,e[53][1],e[53][2],186,e[54][1],e[54][2],186);
//_gotoxy(39,15);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,188);

//// Caesium Barium
//printf("%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,187);
//printf("%c%c%c%c%c%c%c\n", 186,e[55][1],e[55][2],186,e[56][1],e[56][2],186);
//printf("%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,188);

//// Hafnium to Mercury
//_gotoxy(8,16);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,187);
//_gotoxy(8,17);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 186,e[71][1],e[71][2],186,e[72][1],e[72][2],186,e[73][1],e[73][2],186,e[74][1],e[74][2],186,e[75][1],e[75][2],186,e[76][1],e[76][2],186,e[77][1],e[77][2],186,e[78][1],e[78][2],186,e[80][1],e[80][2],186,e[79][1],e[79][2],186);
//_gotoxy(8,18);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,188);

//// Thallium to Radon
//_gotoxy(39,16);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,187);
//_gotoxy(39,17);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 186,e[81][1],e[81][2],186,e[82][1],e[82][2],186,e[83][1],e[83][2],186,e[84][1],e[84][2],186,e[85][1],e[85][2],186,e[86][1],e[86][2],186);
//_gotoxy(39,18);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,188);

//// Francium Radium
//printf("%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,187);
//printf("%c%c%c%c%c%c%c\n", 186,e[87][1],e[87][2],186,e[88][1],e[88][2],186);
//printf("%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,188);

//// Rutherfordium to Copernicum
//_gotoxy(8,19);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,187);
//_gotoxy(8,20);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 186,e[103][1],e[103][2],186,e[104][1],e[104][2],186,e[105][1],e[105][2],186,e[106][1],e[106][2],186,e[107][1],e[107][2],186,e[108][1],e[108][2],186,e[109][1],e[109][2],186,e[110][1],e[110][2],186,e[111][1],e[111][2],186,e[112][1],e[112][2],186);
//_gotoxy(8,21);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,188);

//// Nihonium to Oganesson
//_gotoxy(39,19);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,187);
//_gotoxy(39,20);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 186,e[113][1],e[113][2],186,e[114][1],e[114][2],186,e[115][1],e[115][2],186,e[116][1],e[116][2],186,e[117][1],e[117][2],186,e[118][1],e[118][2],186);
//_gotoxy(39,21);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,188);


//// Lanthanides
//_gotoxy(8,22);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,187);
//_gotoxy(8,23);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 186,e[57][1],e[57][2],186,e[58][1],e[58][2],186,e[59][1],e[59][2],186,e[60][1],e[60][2],186,e[61][1],e[61][2],186,e[62][1],e[62][2],186,e[63][1],e[63][2],186,e[64][1],e[64][2],186,e[65][1],e[65][2],186,e[66][1],e[66][2],186,e[67][1],e[67][2],186,e[68][1],e[68][2],186,e[69][1],e[69][2],186,e[70][1],e[70][2],186,e[71][1],e[71][2],186);
//_gotoxy(8,24);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,188);


//// Actinides
//_gotoxy(8,25);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 201,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,203,205,205,187);
//_gotoxy(8,26);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 186,e[89][1],e[89][2],186,e[90][1],e[90][2],186,e[91][1],e[91][2],186,e[92][1],e[92][2],186,e[93][1],e[93][2],186,e[94][1],e[94][2],186,e[95][1],e[95][2],186,e[96][1],e[96][2],186,e[97][1],e[97][2],186,e[98][1],e[98][2],186,e[99][1],e[99][2],186,e[100][1],e[100][2],186,e[101][1],e[101][2],186,e[102][1],e[102][2],186,e[103][1],e[103][2],186);
//_gotoxy(8,27);printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\n", 200,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,202,205,205,188);



//for (a=1; a<=10; a++) {
//_gotoxy(a+4,a);printf("%c%c%c%c", 201,205,205,187);
//_gotoxy(a+4,a+1);printf("%c%c%c%c", 186,e[a][1],e[a][2],186);
//_gotoxy(a+4,a+2);printf("%c%c%c%c", 200,205,205,188);
//}


}

